{"version":3,"sources":["src/app.template.ts","src/constant.ts","src/views/address-field.template.ts","src/views/address-field.ts","src/utils/index.ts","src/views/text-field.template.ts","src/views/text-field.ts","src/views/password-field.template.ts","src/views/password-field.ts","src/views/index.ts","src/app.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.9d1c423b.js","sourceRoot":"..","sourcesContent":["const template = `\n<div class=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\n  <div class=\"relative py-3 sm:max-w-xl sm:mx-auto\">\n\n    <div class=\"leading-loose\">\n      <form id=\"sign-up-form\" class=\"max-w-xl m-4 p-10 bg-white rounded shadow-xl\">\n        <p class=\"text-gray-800 font-medium mb-5 text-center\">{{title}}</p>\n        <div id=\"required-fields\">\n        \n        </div>\n        \n        <p class=\"mt-8 text-gray-300 text-sm\">Additional information</p>\n\n        <div id=\"optional-fields\">\n        \n        </div>\n\n        <div class=\"mt-4\">\n          <button id=\"btn-join\" class=\"px-4 py-1 text-white font-light tracking-wider bg-gray-300 rounded\" type=\"submit\">회원 가입</button>\n        </div>    \n      </form>\n    </div>\n\n  </div>\n</div>\n`;\n\nexport default window.Handlebars.compile(template);\n","import { ValidateRule } from \"./types\";\n\nexport const RequireRule: ValidateRule = {\n  rule: /.+/,\n  match: true,\n  message: '필수 입력 항목입니다.',\n};\n\nexport const CantContainWhitespace: ValidateRule = {\n  rule: /\\s/,\n  match: false,\n  message: '공백을 포함할 수 없습니다.',\n};\n\nexport const CantStartNumber: ValidateRule = {\n  rule: /^\\d/,\n  match: false,\n  message: '숫자로 시작하는 아이디는 사용할 수 없습니다.',\n}\n\nexport const MinimumLengthLimit = (limit: number): ValidateRule => ({\n  rule: new RegExp(`(.){${limit}}`),\n  match: true,\n  message: `최소한 ${limit}글자 이상 이어야 합니다.`,\n});\n","const template = `\n<div id=\"field-{{id}}\">\n\n  <div class=\"mt-2\">\n    <label class=\"block text-sm\" for=\"cus_email\">{{label}}</label>\n    <div class=\"flex items-center\">\n      <input id=\"address1\" name=\"address1\" type=\"text\" value=\"{{displayAddress}}\" placeholder=\"주소를 검색해 주세요\" class=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\">\n      <button id=\"search-address\" class=\"bg-gray-300 text-gray-500 px-1 py-1 rounded shadow \" style=\"margin-left: -3rem;\">\n        <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 24 24\" class=\"w-6 h-6\"><path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"mt-2\">\n    <label class=\"hidden text-sm block text-gray-600\" for=\"address2\">상세 주소</label>\n    <input id=\"address2\" name=\"address2\" type=\"text\" placeholder=\"상세 주소\" aria-label=\"Address 2\" class=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\" >\n  </div>\n\n</div>\n`;\n\nexport default window.Handlebars.compile(template);\n","import template from './address-field.template';\nimport { DaumAddress } from '../types';\n\ntype Props = {\n  id: string;\n  label: string;\n  require?: boolean;\n}\n\nconst DefaultProps: Props = {\n  id: '',\n  label: 'label',\n  require: false,\n};\n\nexport default class AddressField {\n  private template = template;\n  private container: string;\n  private data: Props;\n\n  private address1?: string;\n  private zipcode?: string;\n\n  constructor(container: string, data: Props) {\n    this.container = container;\n    this.data = { ...DefaultProps, ...data };\n  }\n\n  public get isValid(): boolean {\n    return true;\n  }\n\n  public get name(): string {\n    return this.data.id;\n  }\n\n  public get value(): string {\n    const container = document.querySelector(this.container) as HTMLElement;\n    const address2 = (container.querySelector('#address2') as HTMLInputElement)?.value;\n\n    return `${this.zipcode}|${this.address1} ${address2 || ''}`;\n  }\n\n  public render = (append: boolean = false) => {\n    const container = document.querySelector(this.container) as HTMLElement;\n\n    if (append) {\n      const divFragment = document.createElement('div');\n\n      divFragment.innerHTML = this.template({ \n        ...this.data, \n        });\n\n      container.appendChild(divFragment.firstElementChild as HTMLElement);\n    } else {\n      container.innerHTML = this.template({ \n        ...this.data, \n        });\n    }\n\n    container.querySelector(`#search-address`)?.addEventListener('click', () => {\n      new window.daum.Postcode({\n        oncomplete: (data: DaumAddress) => {\n          this.address1 = data.roadAddress;          \n          this.zipcode = data.sigunguCode;\n          \n          (container.querySelector('#address1') as HTMLInputElement).value = `(${this.zipcode}) ${this.address1}`;\n        }\n      }).open();  \n    });\n  }\n}\n","export const nextTick = (fn: Function) => setTimeout(fn, 16);\n","const template = `\n  <div id=\"field-{{id}}\" class=\"mt-4\">\n    <div class=\"flex items-start mb-1\">\n      <span class=\"flex items-center\">\n        <svg class=\"flex-shrink-0 h-5 w-5 {{#if valid}}{{#if updated}}text-green-500{{else}}text-gray-200{{/if}}{{else}}text-gray-200{{/if}}\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n      </span>\n      <label class=\"block text-sm\" for=\"name\">{{label}}</label>\n    </div>\n    <input id=\"{{id}}\" name=\"{{id}}\" type=\"{{type}}\" value=\"{{text}}\" {{#if require}}required{{/if}} \n      placeholder=\"{{placeholder}}\" aria-label=\"Name\" class=\"w-full px-5 py-1 text-gray-700 {{#if valid}}bg-gray-200{{else}}bg-red-200{{/if}} rounded\">\n    {{#unless valid}}\n    <div class=\"flex items-start mb-1\">\n      <label class=\"block text-sm text-red-300\" for=\"cus_email\">{{validateMessage}}</label>\n    </div>\n    {{/unless}}\n  </div>\n`;\n\nexport default window.Handlebars.compile(template);\n","import { nextTick } from '../utils';\nimport { ValidateRule } from '../types';\nimport template from './text-field.template';\nimport { RequireRule } from '../constant';\n\ntype Props = {\n  id: string;\n  label: string;\n  type: 'text' | 'email' | 'number';\n  placeholder?: string;\n  text?: string;\n  require: boolean;\n}\n\nconst DefaultProps: Props = {\n  id: '',\n  text: '',\n  label: 'label',\n  type: 'text',\n  placeholder: '',\n  require: false,\n};\n\nexport default class TextField {\n  private template = template;\n  private container: string;\n  private data: Props;  \n  private updated: boolean = false;\n  private validateRules: ValidateRule[] = [];\n\n  constructor(container: string, data: Props) {\n    this.container = container;\n    this.data = { ...DefaultProps, ...data };\n\n    if (this.data.require) {\n      this.addValidateRule(RequireRule);\n    }\n\n    nextTick(this.attachEventHandler);\n  }\n\n  private validate = (): ValidateRule | null => {\n    const target = this.data.text ? this.data.text.trim() : '';\n\n    const invalidateRules = this.validateRules\n      .filter(validateRule => validateRule.rule.test(target) !== validateRule.match);\n\n    return (invalidateRules.length > 0) ? invalidateRules[0] : null;\n  }\n\n  private buildData = () => {\n    const isInvalid: ValidateRule | null = this.validate();\n\n    if (this.updated) {\n      return {\n        ...this.data, \n        updated: this.updated,\n        valid: !isInvalid,\n        validateMessage: !!isInvalid ? isInvalid.message : ''\n      }\n    } else {\n      return {\n        ...this.data, \n        updated: this.updated,\n        valid: true,\n        validateMessage: ''\n      }\n    }\n  }\n\n  private onChange = (e: Event) => {\n    const { value, id } = e.target as HTMLInputElement;\n  \n    if (id === this.data.id) {\n      this.updated = true;\n      this.data.text = value;\n      this.update();\n    }\n  }\n\n  private attachEventHandler = () => {\n    document.querySelector(this.container)?.addEventListener('change', this.onChange);\n  }\n\n  private update = () => {\n    const container = document.querySelector(`#field-${this.data.id}`) as HTMLElement;\n    const docFrag = document.createElement('div');\n\n    docFrag.innerHTML = this.template(this.buildData());\n    container.innerHTML = docFrag.children[0].innerHTML;\n  }\n\n  public get name(): string {\n    return this.data.id;\n  }\n\n  public get value(): string {\n    return this.data.text || '';\n  }\n\n  public get isValid(): boolean {\n    return !this.validate();\n  }\n\n  public addValidateRule = (rule:ValidateRule) => {\n    this.validateRules.push(rule);\n  }\n\n  public render = (append: boolean = false) => {\n    const container = document.querySelector(this.container) as HTMLElement;\n\n    if (append) {\n      const divFragment = document.createElement('div');\n      divFragment.innerHTML = this.template(this.buildData());\n\n      container.appendChild(divFragment.children[0]);\n    } else {\n      container.innerHTML = this.template(this.buildData());\n    }\n  }\n}\n","const template = `\n<div id=\"field-{{id}}\">\n  <div class=\"mt-4\">\n    <div class=\"flex items-start mb-1\">\n      <span class=\"flex items-center\">\n        <svg class=\"flex-shrink-0 h-5 w-5 {{#if valid}}{{#if updated}}text-green-500{{else}}text-gray-200{{/if}}{{else}}text-gray-200{{/if}}\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n      </span>        \n      <label class=\"block text-sm\" for=\"password\">{{label}}</label>\n    </div>\n    <input id=\"{{id}}\" name=\"{{id}}\" type=\"password\" value=\"{{text}}\" placeholder=\"{{placeholder}}\" {{#if require}}required{{/if}} aria-label=\"Password\" class=\"w-full px-5 py-1 text-gray-700 bg-gray-200 rounded\">\n    </div>\n\n    <div class=\"mt-1\">\n    <div class=\"flex items-start mb-1\">\n      {{#if strongLevel0}}\n      <span class=\"flex items-center\">\n        <svg class=\"flex-shrink-0 h-5 w-5 text-green-100\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n      </span>        \n      {{/if}}\n\n      {{#if strongLevel1}}\n      <span class=\"flex items-center\">\n        <svg class=\"flex-shrink-0 h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n      </span>        \n      {{/if}}\n\n      {{#if strongLevel2}}\n      <span class=\"flex items-center\">\n        <svg class=\"flex-shrink-0 h-5 w-5 text-green-700\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n      </span>        \n      {{/if}}\n\n      <label class=\"block text-sm text-gray-300\" for=\"cus_email\">{{strongMessage}}</label>\n    </div>\n  </div>\n</div>\n`;\n\nexport default window.Handlebars.compile(template);\n","import { nextTick } from '../utils';\nimport { ValidateRule } from '../types';\nimport template from './password-field.template';\nimport { RequireRule } from '../constant';\n\nenum StrongLevel {\n  None = 0,\n  Light,\n  Medium,\n  Havey,\n}\n\ntype Props = {\n  id: string;\n  label: string;\n  text?: string;\n  require?: boolean;\n  placeholder?: string;\n  strong?: StrongLevel;\n}\n\nconst StrongMessage: [string, string, string, string] = [\n  '금지된 수준',\n  '심각한 수준',\n  '보통 수준',\n  '강력한 암호',\n];\n\nconst DefaultProps: Props = {\n  id: '',\n  label: 'label',\n  text: '',\n  require: true,\n  placeholder: '',\n  strong: StrongLevel.None,\n};\n\nexport default class PasswordField {\n  private template = template;\n  private container: string;\n  private data: Props;\n  private updated: boolean = false;\n  private validateRules: ValidateRule[] = [];\n\n  constructor(container: string, data: Props) {\n    this.container = container;\n    this.data = { ...DefaultProps, ...data };\n\n    if (this.data.require) {\n      this.addValidateRule(RequireRule);\n    }\n\n    nextTick(this.attachEventHandler);\n  }\n\n  private onChange = (e: Event) => {\n    const { value, id } = e.target as HTMLInputElement;\n  \n    if (id === this.data.id) {\n      this.updated = true;\n      this.data.text = value;\n      this.update();\n    }\n  }\n\n  private attachEventHandler = () => {\n    document.querySelector(this.container)?.addEventListener('change', this.onChange);\n  }\n\n  private buildData = () => { \n    let strongLevel = -1;\n    const isInvalid: ValidateRule | null = this.validate();\n\n    if (this.data.text!.length > 0) {\n      strongLevel++;\n    }\n\n    if (this.data.text!.length > 12) {\n      strongLevel++;\n    }\n\n    if (/[!@#$%^&*()]/.test(this.data.text!)) {\n      strongLevel++;\n    }\n\n    if (/\\d/.test(this.data.text!)) {\n      strongLevel++;\n    }\n\n    return {\n      ...this.data, \n      updated: this.updated,\n      valid: this.updated ? !isInvalid : true,\n      strongMessage: strongLevel < 0 ? '' : StrongMessage[strongLevel],\n      strongLevel0: strongLevel >= 1,\n      strongLevel1: strongLevel >= 2,\n      strongLevel2: strongLevel >= 3,\n      strongLevel3: strongLevel >= 4,\n    };\n  }\n\n  private validate = (): ValidateRule | null => {\n    const target = this.data.text ? this.data.text.trim() : '';\n\n    const invalidateRules = this.validateRules\n      .filter(validateRule => validateRule.rule.test(target) !== validateRule.match);\n\n    return (invalidateRules.length > 0) ? invalidateRules[0] : null;\n  }\n\n  private update = () => {\n    const container = document.querySelector(`#field-${this.data.id}`) as HTMLElement;\n    const docFrag = document.createElement('div');\n\n    docFrag.innerHTML = this.template(this.buildData());\n\n    container.innerHTML = docFrag.children[0].innerHTML;\n  }\n\n  public get name(): string {\n    return this.data.id;\n  }\n\n  public get value(): string {\n    return this.data.text || '';\n  }\n\n  public get isValid(): boolean {\n    return !this.validate();\n  }\n\n  public addValidateRule = (rule:ValidateRule) => {\n    this.validateRules.push(rule);\n  }\n\n  public render = (append: boolean = false) => {\n    const container = document.querySelector(this.container) as HTMLElement;\n\n    if (append) {\n      const divFragment = document.createElement('div');\n      divFragment.innerHTML = this.template(this.buildData());\n\n      container.appendChild(divFragment.firstElementChild as HTMLElement);\n    } else {\n      container.innerHTML = this.template(this.buildData());\n    }\n  }\n}\n","export { default as AddressField } from './address-field';\nexport { default as TextField } from './text-field';\nexport { default as PasswordField } from './password-field';\n","import template from './app.template';\nimport { CantContainWhitespace, CantStartNumber, MinimumLengthLimit } from './constant';\nimport { AnyObject } from './types';\nimport { TextField, PasswordField, AddressField } from './views';\n\nexport default class App {\n  template = template;\n  data: AnyObject;\n  container: HTMLElement;\n  fields: AnyObject[];\n  active: boolean = false;\n\n  constructor(container: string, data: AnyObject = {}) {\n    this.container = document.querySelector(container) as HTMLElement;\n    this.data = data;\n    this.fields = [];\n\n    this.initialize();\n    \n    setInterval(this.validFieldMonitor, 1000/30);\n  }\n\n  private initialize = () => {\n    const nameField = new TextField('#required-fields', { \n      id: 'name', label: '이름', type: 'text', placeholder: '이름을 입력해주세요', require: true,\n    });\n\n    const idField = new TextField('#required-fields', { \n      id: 'id', label: '아이디', type: 'text', placeholder: '아이디를 입력해주세요', require: true,\n    });\n\n    const emailField = new TextField('#required-fields', { \n      id: 'email', label: '이메일', type: 'email', placeholder: '이메일을 입력해주세요', require: true,\n    });\n    \n    const passwordField = new PasswordField('#required-fields', { \n      id: 'password', label: '비밀번호', placeholder: '비밀번호를 입력해주세요', \n    });\n\n    const addressField = new AddressField('#optional-fields', {\n      id: 'address', label: '배송지 주소',\n    });\n\n    idField.addValidateRule(CantContainWhitespace);\n    idField.addValidateRule(CantStartNumber);\n    idField.addValidateRule(MinimumLengthLimit(3));\n\n    emailField.addValidateRule(CantContainWhitespace);\n\n    this.fields.push(nameField);\n    this.fields.push(idField);\n    this.fields.push(emailField);\n    this.fields.push(passwordField);\n    this.fields.push(addressField);\n  }\n\n  private validFieldMonitor = () => {\n    const btnJoin = this.container.querySelector('#btn-join') as HTMLButtonElement;\n\n    if (this.fields.filter(field => field.isValid).length === this.fields.length) {\n      this.active = true;\n      btnJoin.classList.remove('bg-gray-300');\n      btnJoin.classList.add('bg-green-500');\n    } else {\n      this.active = false;\n      btnJoin.classList.remove('bg-green-500');\n      btnJoin.classList.add('bg-gray-300');\n    }\n  }\n\n  private onSubmit = (e: Event) => {\n    e.preventDefault();\n\n    if (!this.active) return;\n\n    const submitData: AnyObject = this.fields\n        .map(field => ({ [field.name]: field.value }))\n        .reduce((a, b) => ({ ...a, ...b }), {});\n\n    console.log(submitData);\n  }\n\n  public render = () => {\n    this.container.innerHTML = this.template(this.data);\n    this.fields.forEach(field => {\n      field.render(true);\n    });\n\n    this.container.addEventListener('submit', this.onSubmit);\n  }\n}\n","import { AnyObject } from './types';\nimport App from './app';\n\ndeclare global {\n  interface Window {\n    Handlebars: {\n      compile: (template: string) => (data: AnyObject) => string;\n    },\n    daum: any,\n  }\n}\n\nconst app = new App('#root', {\n  title: 'Javascript & TypeScript Essential Chapter 5 - Sign up'\n});\n\napp.render();\n"]}